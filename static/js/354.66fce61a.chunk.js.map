{"version":3,"file":"static/js/354.66fce61a.chunk.js","mappings":"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","sources":["webpack://front_rs_auto_admin/./src/widgets/ListSettings/ListSettings.module.scss?a95d","widgets/CreateTypeWork/CreateTypeWork.tsx","widgets/CreateVarietyWork/CreateVarietyWork.tsx","widgets/ListSettings/ListSettings.tsx","pages/SettingPay/ui/SettingPage.tsx","providers/api/axios/axios.ts","shared/icons/RecordReceptionIcon/RecordReceptionIcon.tsx","shared/icons/MenuIcon/MenuIcon.tsx","shared/icons/SettingsIcon/SettingsIcon.tsx","shared/ui/ThemeSwitch/ThemeSwitch.tsx","shared/icons/MainIcon/MainIcon.tsx","webpack://front_rs_auto_admin/./src/shared/ui/MiniDrawer/MiniDrawer.module.scss?d64b","shared/ui/MiniDrawer/MiniDrawer.tsx","shared/ui/WrapperPage/WrapperPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ListSettings\":\"ListSettings_ListSettings__DYb6w\"};","import {memo, ReactNode, useEffect, useState} from 'react';\nimport {\n    Box,\n    Button,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Modal,\n    Select,\n    Slide,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport useAxios from \"../../providers/api/axios/axios\";\nimport {useAppdispatch, useAppSelector} from \"../../shared/hooks/Redux/redux\";\nimport {TypeWork} from \"../../providers/api/models/TypeWork\";\nimport {typeWorkSlice} from \"../../providers/api/slice/TypeWorkSlice\";\nimport {listTypeWorksSlice} from \"../../providers/api/slice/ListTypeWorksSlice\";\n\n\ninterface CreateTypeWorkProps {\n    className?: string\n    children?: ReactNode\n    open: boolean\n    handleClose: () => void\n}\n\n\nexport const CreateTypeWork = memo((props: CreateTypeWorkProps) => {\n    const {\n        className,\n        children,\n        open,\n        handleClose,\n        ...otherProps\n    } = props\n\n    const [isChange, setIsChange] = useState(false)\n    const {executeRequest: req} = useAxios<TypeWork>();\n    const {data, error, loading, executeRequest} = useAxios<TypeWork[]>();\n    const {typeWorkApp} = typeWorkSlice.actions\n    const {typeWorkReset} = typeWorkSlice.actions\n    const {typeWorkName} = typeWorkSlice.actions\n    const {typeWork} = useAppSelector(state => state.typeWorkSlice)\n    const {listTypeWorkApp} = listTypeWorksSlice.actions\n    const {listTypeWork} = useAppSelector(state => state.listTypeWorksSlice)\n    useEffect(() => {\n        if (data) {\n            dispatch(listTypeWorkApp(data))\n        }\n\n\n    }, [data]);\n\n\n    const dispatch = useAppdispatch()\n    const changeData = async () => {\n        try {\n\n            await req('PUT', 'organization_app/update_or_create_type_of_work/', typeWork);\n\n\n        } catch (error) {\n            console.error('Ошибка получения данных:', error);\n        }\n    };\n    const fetcData = async () => {\n        try {\n\n            await executeRequest('GET', 'organization_app/get_type_of_work/');\n\n\n        } catch (error) {\n            console.error('Ошибка получения данных:', error);\n        }\n    };\n    const handleChange = () => {\n        setIsChange(true)\n        fetcData()\n    }\n    const handleCreate = () => {\n        setIsChange(false)\n        dispatch(typeWorkReset())\n    }\n\n\n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Изменить или создать тип работ\n                    </Typography>\n                    <div>\n                        <Button onClick={handleCreate}>Создать</Button>\n                        <Button onClick={handleChange}>Изменить</Button>\n                    </div>\n                    <Slide\n                        direction={\"right\"}\n                        in={isChange} mountOnEnter unmountOnExit\n                    >\n                        <FormControl\n                            sx={{\n                                '& .MuiTextField-root': {m: 1, width: '25ch'},\n                                marginBottom: \"10px\"\n                            }}\n\n                            fullWidth size=\"medium\">\n                            <InputLabel id=\"demo-select-small-label\">Выбор услуги для изменения</InputLabel>\n                            <Select\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={typeWork.name_type}\n                                label=\"Выбор услуги\"\n                                // onChange={(e) => dispatch(typeWorkApp(e.target.value))}\n\n                            >\n                                {listTypeWork && listTypeWork.map((item, index) => (\n                                    <MenuItem\n                                        key={index}\n                                        value={item.name_type}\n                                        onClick={() => dispatch(typeWorkApp(item))}\n\n                                    >\n                                        {item.name_type}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n\n                    </Slide>\n                    <TextField\n                        sx={{\n                            '& .MuiTextField-root': {m: 1, width: '25ch'},\n                            marginBottom: \"10px\"\n                        }}\n                        error={false}\n                        fullWidth\n                        size=\"medium\"\n                        helperText=\"\"\n                        id=\"outlined\"\n                        label=\"Наименование услуги\"\n                        value={typeWork.name_type}\n                        onChange={(e) => dispatch(typeWorkName(e.target.value))}\n                    />\n\n                    <Button\n                        disabled={typeWork.name_type === \"\"}\n                        onClick={() => {\n                        handleClose();\n                        changeData()\n                    }}>Сохранить</Button>\n                </Box>\n            </Modal>\n        </div>\n    );\n});","import {memo, ReactNode, useEffect, useState} from 'react';\nimport {\n    Box,\n    Button,\n    FormControl,\n    InputLabel,\n    MenuItem,\n    Modal,\n    Select,\n    Slide,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport useAxios from \"../../providers/api/axios/axios\";\nimport {TypeWork} from \"../../providers/api/models/TypeWork\";\nimport {typeWorkSlice} from \"../../providers/api/slice/TypeWorkSlice\";\nimport {useAppdispatch, useAppSelector} from \"../../shared/hooks/Redux/redux\";\nimport varietyWorksSlice, {varietyWorkSlice} from \"../../providers/api/slice/VarietyWorkSlice\";\nimport {listVarietyWorksSlice} from \"../../providers/api/slice/ListVarietyWorkSlice\";\nimport {VarietyWorkType} from \"../../providers/api/models/VarietyWorkType\";\nimport {listTypeWorksSlice} from \"../../providers/api/slice/ListTypeWorksSlice\";\n\ninterface CreateVarietyWorkProps {\n    className?: string\n    children?: ReactNode\n    open: boolean\n    handleClose: () => void\n\n}\n\n\nexport const CreateVarietyWork = memo((props: CreateVarietyWorkProps) => {\n    const {\n        className,\n        children,\n        open,\n        handleClose,\n        ...otherProps\n    } = props\n\n    const [isChange, setIsChange] = useState(false)\n    const {executeRequest: req} = useAxios<VarietyWorkType>();\n    const {data: typeDate, executeRequest: reqType} = useAxios<TypeWork[]>();\n    const {data, error, loading, executeRequest} = useAxios<VarietyWorkType[]>();\n    const dispatch = useAppdispatch()\n    const {varietyWorkApp} = varietyWorkSlice.actions\n    const {varietyWorkName} = varietyWorkSlice.actions\n    const {varietyWorkCost} = varietyWorkSlice.actions\n    const {varietyWorkMinutes} = varietyWorkSlice.actions\n    const {varietyWorkType} = varietyWorkSlice.actions\n    const {varietyWorkReset} = varietyWorkSlice.actions\n    const {varietyWork} = useAppSelector(state => state.varietyWorksSlice)\n    const {listVarietyWorkApp} = listVarietyWorksSlice.actions\n    const {listVarietyWork} = useAppSelector(state => state.listVarietyWorksSlice)\n    const {typeWork} = useAppSelector(state => state.typeWorkSlice)\n    const {listTypeWorkApp} = listTypeWorksSlice.actions\n    const {listTypeWork} = useAppSelector(state => state.listTypeWorksSlice)\n\n\n    const changeData = async () => {\n        try {\n\n            await req('PUT', 'organization_app/update_or_create_variety_of_work/', varietyWork);\n\n\n        } catch (error) {\n            console.error('Ошибка получения данных:', error);\n        }\n    };\n    const fetcData = async () => {\n        try {\n\n            await executeRequest('GET', 'organization_app/get_variety_of_work/');\n\n\n        } catch (error) {\n            console.error('Ошибка получения данных:', error);\n        }\n    };\n\n    const getType = async () => {\n        try {\n\n            await reqType('GET', 'organization_app/get_type_of_work/');\n\n\n        } catch (error) {\n            console.error('Ошибка получения данных:', error);\n        }\n    };\n    useEffect(() => {\n        getType()\n    }, [open]);\n\n    useEffect(() => {\n        if (typeDate) {\n            dispatch(listTypeWorkApp(typeDate))\n\n        }\n    }, [typeDate]);\n\n    useEffect(() => {\n        console.log(data)\n        if (data) {\n            dispatch(listVarietyWorkApp(data))\n\n\n        }\n    }, [data]);\n\n\n    const handleChange = () => {\n        setIsChange(true)\n        fetcData()\n    }\n    const handleCreate = () => {\n        setIsChange(false)\n        dispatch(varietyWorkReset())\n    }\n\nconst handleCost = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let cost = e.target.value; // Получаем значение введенное пользователем\n    if (cost.length > 1 && cost[0] === '0') { // Проверяем, если введено больше двух символов и первый символ равен 0\n        cost = cost.slice(1, cost.length); // Удаляем первый символ, если он равен 0\n    }\n    e.target.value = cost;\n    dispatch(varietyWorkCost(Number(cost))); // Отправляем обработанное значение в функцию dispatch\n}\n\nconst handleMinutes = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let cost = e.target.value; // Получаем значение введенное пользователем\n    if (cost.length > 1 && cost[0] === '0') { // Проверяем, если введено больше двух символов и первый символ равен 0\n        cost = cost.slice(1, cost.length); // Удаляем первый символ, если он равен 0\n    }\n    e.target.value = cost;\n    dispatch(varietyWorkMinutes(Number(cost))); // Отправляем обработанное значение в функцию dispatch\n}\n\n\n    const style = {\n        position: 'absolute' as 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        width: 400,\n        bgcolor: 'background.paper',\n        border: '2px solid #000',\n        boxShadow: 24,\n        p: 4,\n    };\n\n\n    return (\n        <div>\n            <Modal\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n                        Изменить или создать тип работ\n                    </Typography>\n                    <div>\n                        <Button onClick={handleCreate}>Создать</Button>\n                        <Button onClick={handleChange}>Изменить</Button>\n                    </div>\n                    <Slide\n                        direction={\"right\"}\n                        in={isChange} mountOnEnter unmountOnExit\n                    >\n                        <FormControl\n                            sx={{\n                                '& .MuiTextField-root': {m: 1, width: '25ch'},\n                                marginBottom: \"10px\"\n                            }}\n\n                            fullWidth size=\"medium\">\n                            <InputLabel id=\"demo-select-small-label\">Выбор типа работ для изменения</InputLabel>\n                            <Select\n                                labelId=\"demo-select-small-label\"\n                                id=\"demo-select-small\"\n                                value={varietyWork.name_variety}\n                                label=\"Выбор услуги\"\n                                onChange={(e) => dispatch(varietyWorkName(e.target.value))}\n\n                            >\n                                {listVarietyWork && listVarietyWork.map((item, index) => (\n                                    <MenuItem\n                                        key={index}\n                                        value={item.name_variety}\n                                        onClick={() =>{\n                                            dispatch(varietyWorkApp(item));\n                                    }}\n\n                                    >\n                                        {item.name_variety}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </FormControl>\n\n                    </Slide>\n                    <TextField\n                        sx={{\n                            '& .MuiTextField-root': {m: 1, width: '25ch'},\n                            marginBottom: \"10px\"\n                        }}\n                        error={false}\n                        fullWidth\n                        size=\"medium\"\n                        helperText=\"\"\n                        id=\"outlined\"\n                        label=\"Разновидность услуги\"\n                        value={varietyWork.name_variety}\n                        onChange={(e) => dispatch(varietyWorkName(e.target.value))}\n                    />\n                    <TextField\n                        sx={{\n                            '& .MuiTextField-root': {m: 1, width: '25ch'},\n                            marginBottom: \"10px\"\n                        }}\n                        error={false}\n                        fullWidth\n                        size=\"medium\"\n                        helperText=\"\"\n                        id=\"outlined\"\n                        label=\"Стоимость работы\"\n                        type={\"number\"}\n                        value={varietyWork.cost}\n                        onChange={handleCost}\n                    />\n                    <TextField\n                        sx={{\n                            '& .MuiTextField-root': {m: 1, width: '25ch'},\n                            marginBottom: \"10px\"\n                        }}\n                        error={false}\n                        fullWidth\n                        size=\"medium\"\n                        helperText=\"\"\n                        id=\"outlined\"\n                        label=\"Длительность работы в минутах\"\n                        type={\"number\"}\n                        value={varietyWork.duration_in_minutes}\n                        onChange={handleMinutes}\n                    />\n                    <FormControl\n                        sx={{\n                            '& .MuiTextField-root': {m: 1, width: '25ch'},\n                            marginBottom: \"10px\"\n                        }}\n\n                        fullWidth size=\"medium\">\n                        <InputLabel id=\"demo-select-small-label\">Тип услуги</InputLabel>\n                        <Select\n                            labelId=\"demo-select-small-label\"\n                            id=\"demo-select-small\"\n                            value={varietyWork.type_work}\n                            label=\"Тип услуги\"\n                            onChange={(e) => dispatch(varietyWorkType(e.target.value))}\n\n                        >\n                            {listTypeWork && listTypeWork.map((item, index) => (\n                                <MenuItem\n                                    key={index}\n                                    value={item.name_type}\n                                    onClick={() => dispatch(varietyWorkType(item.name_type))}\n\n                                >\n                                    {item.name_type}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n\n\n                    <Button\n                        disabled={\n                        varietyWork.type_work === \"\" ||\n                        varietyWork.cost === 0 ||\n                        varietyWork.duration_in_minutes === 0 ||\n                        varietyWork.name_variety === \"\"\n                    }\n                        onClick={() => {\n                        handleClose();\n                        changeData()\n                    }}>Сохранить</Button>\n                </Box>\n            </Modal>\n\n        </div>\n    );\n});","import {memo, ReactNode, useState} from 'react';\nimport cls from \"./ListSettings.module.scss\"\nimport Button from \"@mui/material/Button\";\nimport Accordion from '@mui/material/Accordion';\nimport AccordionActions from '@mui/material/AccordionActions';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport {CreateTypeWork} from \"../CreateTypeWork/CreateTypeWork\";\nimport {CreateVarietyWork} from \"../CreateVarietyWork/CreateVarietyWork\";\n\ninterface ListSettingsProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nexport const ListSettings = memo((props: ListSettingsProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n    const [openTypeWorkModal, setOpenTypeWorkModal] = useState(false)\n    const [openVarietyWorkModal, setOpenVarietyWorkModal] = useState(false)\n    const handleCloseTypeWorkModal =()=>{\n        setOpenTypeWorkModal(false)\n    }\n    const handleCloseVarietyWorkModal =()=>{\n        setOpenVarietyWorkModal(false)\n    }\n\n\n    return (\n        <div className={cls.ListSettings}>\n            <CreateTypeWork open={openTypeWorkModal} handleClose={handleCloseTypeWorkModal}/>\n            <CreateVarietyWork open={openVarietyWorkModal} handleClose={handleCloseVarietyWorkModal}/>\n\n            <Accordion >\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"panel1-content\"\n                    id=\"panel1-header\"\n                >\n                    Тип услуг\n                </AccordionSummary>\n                <AccordionDetails>\n                </AccordionDetails>\n                <AccordionActions>\n                    <Button>Удалить</Button>\n                    <Button onClick={()=>setOpenTypeWorkModal(true)}>Изменить / Создать</Button>\n                </AccordionActions>\n\n            </Accordion>\n            <Accordion>\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"panel2-content\"\n                    id=\"panel2-header\"\n                >\n                    Разновидность услуг\n                </AccordionSummary>\n                <AccordionDetails>\n                </AccordionDetails>\n                <AccordionActions>\n                    <Button>Удалить</Button>\n                    <Button onClick={()=>{setOpenVarietyWorkModal(true)}}>Изменить</Button>\n                </AccordionActions>\n\n            </Accordion>\n            <Accordion disabled>\n\n                <AccordionSummary\n                    expandIcon={<ExpandMoreIcon/>}\n                    aria-controls=\"panel3-content\"\n                    id=\"panel3-header\"\n                >\n                    Акции\n                </AccordionSummary>\n                <AccordionDetails>\n                </AccordionDetails>\n                <AccordionActions>\n                    <Button>Удалить</Button>\n                    <Button>Изменить</Button>\n                </AccordionActions>\n            </Accordion>\n\n        </div>\n    );\n});","import {memo, ReactNode} from 'react';\nimport {WrapperPage} from \"../../../shared/ui/WrapperPage/WrapperPage\";\nimport {ListSettings} from \"../../../widgets/ListSettings/ListSettings\";\n\ninterface SettingPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nconst SettingPage = memo((props: SettingPageProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n\n    return (\n        <WrapperPage>\n            <ListSettings/>\n        </WrapperPage>\n    );\n});\nexport default SettingPage","import {Simulate} from \"react-dom/test-utils\";\nimport error = Simulate.error;\nimport {useCookies} from \"react-cookie\";\nimport {useState} from 'react';\nimport axios, {AxiosResponse} from 'axios';\n\n\ninterface Token {\n    refresh: string;\n    access: string\n\n}\n\n\n// Доступ к refreshToken из cookies\n\nexport const API_URL = \"https://rs-auto.tw1.ru/\"\n\nconst $api = axios.create({\n    // withCredentials: true,\n    baseURL: API_URL\n})\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config\n})\n$api.interceptors.response.use((config) => {\n    return config\n}, async (error) => {\n    if (error.response.status === 401 && error.config && !error.config._retry) {\n        error.config._retry = true; // Установка флага повторной попытки, чтобы избежать бесконечной петли повторных запросов\n        try {\n            const body = {\n                'refresh': sessionStorage.getItem(\"refresh\")\n\n            }\n\n            const response = await axios.post<Token>(`${API_URL}organization_app/api/token/refresh/`, body)\n            localStorage.setItem(\"token\", response.data.access)\n            return $api.request(error.config);\n        } catch (e) {\n            console.log(e, \"Пользователь не авторизован\")\n        }\n\n    }\n    return Promise.reject(error); // Возврат оригинальной ошибки, если обновление токена не удалось\n})\n// export default $api\n\n\ninterface AxiosHookResponse<T> {\n    data: T | null;\n    error: any;\n    loading: boolean;\n    executeRequest: (method: string, url: string, requestData?: any) => Promise<void>;\n}\n\nconst useAxios = <T>(): AxiosHookResponse<T> => {\n    const [data, setData] = useState<T | null>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const executeRequest = async (method: string, url: string, requestData?: any) => {\n        const headers = {\n            'Content-Type': 'application/json', // Пример стандартного заголовка\n\n        };\n\n        setLoading(true);\n        try {\n            let response: AxiosResponse<T>;\n            switch (method.toUpperCase()) {\n                case 'GET':\n                    response = await $api.get<T>(url, {headers});\n                    break;\n                case 'POST':\n                    response = await $api.post<T>(url, requestData, {headers});\n                    break;\n                case 'PUT':\n                    response = await $api.put<T>(url, requestData, {headers});\n                    break;\n                default:\n                    throw new Error('Unsupported method');\n            }\n            // console.log(response.data)\n            setData(response.data);\n            setLoading(false);\n        } catch (error) {\n            setError(error);\n            setLoading(false);\n        }\n    };\n\n    return {data, error, loading, executeRequest};\n};\n\nexport default useAxios;\n\n","import {memo, ReactNode, SVGProps} from 'react';\nimport {useAppSelector} from \"../../hooks/Redux/redux\";\n\ninterface SearchIconProps  {\n    className?: string\n    children?: ReactNode\n    style?:SVGProps<SVGStopElement>\n}\n\n\nexport const RecordReceptionIcon = memo((props: SearchIconProps) => {\n    const {theme} = useAppSelector(state => state.themeAppSlice)\n\n    const {\n        className,\n        children,\n        style,\n        ...otherProps\n    } = props\n\n\n    return (\n        <svg  xmlns=\"http://www.w3.org/2000/svg\" id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 24 24\"\n             width=\"35\"\n             height=\"35\"\n            fill={theme ? \"rgb(42, 127, 189)\" : \"rgb(42,71,189)\"}\n        >\n            <path\n                d=\"M19,2h-1V1c0-.552-.448-1-1-1s-1,.448-1,1v1H8V1c0-.552-.448-1-1-1s-1,.448-1,1v1h-1C2.243,2,0,4.243,0,7v12c0,2.757,2.243,5,5,5h4c.552,0,1-.448,1-1s-.448-1-1-1H5c-1.654,0-3-1.346-3-3V10H23c.552,0,1-.448,1-1v-2c0-2.757-2.243-5-5-5Zm3,6H2v-1c0-1.654,1.346-3,3-3h14c1.654,0,3,1.346,3,3v1Zm-3.121,4.879l-5.707,5.707c-.755,.755-1.172,1.76-1.172,2.829v1.586c0,.552,.448,1,1,1h1.586c1.069,0,2.073-.417,2.828-1.172l5.707-5.707c.567-.567,.879-1.32,.879-2.122s-.312-1.555-.878-2.121c-1.134-1.134-3.11-1.134-4.243,0Zm2.828,2.828l-5.708,5.707c-.377,.378-.879,.586-1.414,.586h-.586v-.586c0-.534,.208-1.036,.586-1.414l5.708-5.707c.377-.378,1.036-.378,1.414,0,.189,.188,.293,.439,.293,.707s-.104,.518-.293,.707Zm-16.707-1.707c0-.552,.448-1,1-1h7c.552,0,1,.448,1,1s-.448,1-1,1H6c-.552,0-1-.448-1-1Zm6,4c0,.552-.448,1-1,1H6c-.552,0-1-.448-1-1s.448-1,1-1h4c.552,0,1,.448,1,1Z\"/>\n        </svg>\n    )\n        ;\n});","import {memo, ReactNode} from 'react';\nimport {useAppSelector} from \"../../hooks/Redux/redux\";\n\ninterface MenuIconProps {\n    className?: string\n    children?: ReactNode\n    theme: boolean\n}\n\n\nexport const MenuIcon = memo((props: MenuIconProps) => {\n\n    const {\n        className,\n        children,\n        theme,\n        ...otherProps\n    } = props\n\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\"\n             width=\"35\"\n             height=\"35\"\n             fill={theme ? \"white\" : \"rgba(34,35,35,0.94)\"}\n        >\n            <rect y=\"11\" width=\"24\" height=\"2\" rx=\"1\"/>\n            <rect y=\"4\" width=\"24\" height=\"2\" rx=\"1\"/>\n            <rect y=\"18\" width=\"24\" height=\"2\" rx=\"1\"/>\n        </svg>\n\n    );\n});","import {memo, ReactNode} from 'react';\nimport {useAppSelector} from \"../../hooks/Redux/redux\";\n\ninterface SettingsIconProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nexport const SettingsIcon = memo((props: SettingsIconProps) => {\n    const {theme} = useAppSelector(state => state.themeAppSlice)\n\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\"\n        width=\"35\"\n        height=\"35\"\n        fill={theme ? \"rgb(42, 127, 189)\" : \"rgb(42,71,189)\"}\n        >\n            <path d=\"M12,8a4,4,0,1,0,4,4A4,4,0,0,0,12,8Zm0,6a2,2,0,1,1,2-2A2,2,0,0,1,12,14Z\"/>\n            <path\n                d=\"M21.294,13.9l-.444-.256a9.1,9.1,0,0,0,0-3.29l.444-.256a3,3,0,1,0-3-5.2l-.445.257A8.977,8.977,0,0,0,15,3.513V3A3,3,0,0,0,9,3v.513A8.977,8.977,0,0,0,6.152,5.159L5.705,4.9a3,3,0,0,0-3,5.2l.444.256a9.1,9.1,0,0,0,0,3.29l-.444.256a3,3,0,1,0,3,5.2l.445-.257A8.977,8.977,0,0,0,9,20.487V21a3,3,0,0,0,6,0v-.513a8.977,8.977,0,0,0,2.848-1.646l.447.258a3,3,0,0,0,3-5.2Zm-2.548-3.776a7.048,7.048,0,0,1,0,3.75,1,1,0,0,0,.464,1.133l1.084.626a1,1,0,0,1-1,1.733l-1.086-.628a1,1,0,0,0-1.215.165,6.984,6.984,0,0,1-3.243,1.875,1,1,0,0,0-.751.969V21a1,1,0,0,1-2,0V19.748a1,1,0,0,0-.751-.969A6.984,6.984,0,0,1,7.006,16.9a1,1,0,0,0-1.215-.165l-1.084.627a1,1,0,1,1-1-1.732l1.084-.626a1,1,0,0,0,.464-1.133,7.048,7.048,0,0,1,0-3.75A1,1,0,0,0,4.79,8.992L3.706,8.366a1,1,0,0,1,1-1.733l1.086.628A1,1,0,0,0,7.006,7.1a6.984,6.984,0,0,1,3.243-1.875A1,1,0,0,0,11,4.252V3a1,1,0,0,1,2,0V4.252a1,1,0,0,0,.751.969A6.984,6.984,0,0,1,16.994,7.1a1,1,0,0,0,1.215.165l1.084-.627a1,1,0,1,1,1,1.732l-1.084.626A1,1,0,0,0,18.746,10.125Z\"/>\n        </svg>\n\n\n\n)\n    ;\n});","import {memo, ReactNode} from 'react';\nimport {styled} from '@mui/material/styles';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch, {SwitchProps} from '@mui/material/Switch';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport {useAppdispatch, useAppSelector} from \"../../hooks/Redux/redux\";\nimport {themeAppSlice} from \"../../../providers/api/slice/ThemeSlice\";\n\ninterface ThemeSwitchProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nexport const ThemeSwitch = memo((props: ThemeSwitchProps) => {\n    const dispatch = useAppdispatch()\n    const {themeApp} = themeAppSlice.actions\n    const {theme} = useAppSelector(state => state.themeAppSlice)\n\n\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n\n    const MaterialUISwitch = styled(Switch)(({theme}) => ({\n        width: 62,\n        height: 34,\n        padding: 7,\n        '& .MuiSwitch-switchBase': {\n            margin: 1,\n            padding: 0,\n            transform: 'translateX(6px)',\n            '&.Mui-checked': {\n                color: '#fff',\n                transform: 'translateX(22px)',\n                '& .MuiSwitch-thumb:before': {\n                    backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n                        '#fff',\n                    )}\" d=\"M4.2 2.5l-.7 1.8-1.8.7 1.8.7.7 1.8.6-1.8L6.7 5l-1.9-.7-.6-1.8zm15 8.3a6.7 6.7 0 11-6.6-6.6 5.8 5.8 0 006.6 6.6z\"/></svg>')`,\n                },\n                '& + .MuiSwitch-track': {\n                    opacity: 1,\n                    backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n                },\n            },\n        },\n        '& .MuiSwitch-thumb': {\n            backgroundColor: theme.palette.mode === 'dark' ? '#003892' : '#001e3c',\n            width: 32,\n            height: 32,\n            '&::before': {\n                content: \"''\",\n                position: 'absolute',\n                width: '100%',\n                height: '100%',\n                left: 0,\n                top: 0,\n                backgroundRepeat: 'no-repeat',\n                backgroundPosition: 'center',\n                backgroundImage: `url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"20\" width=\"20\" viewBox=\"0 0 20 20\"><path fill=\"${encodeURIComponent(\n                    '#fff',\n                )}\" d=\"M9.305 1.667V3.75h1.389V1.667h-1.39zm-4.707 1.95l-.982.982L5.09 6.072l.982-.982-1.473-1.473zm10.802 0L13.927 5.09l.982.982 1.473-1.473-.982-.982zM10 5.139a4.872 4.872 0 00-4.862 4.86A4.872 4.872 0 0010 14.862 4.872 4.872 0 0014.86 10 4.872 4.872 0 0010 5.139zm0 1.389A3.462 3.462 0 0113.471 10a3.462 3.462 0 01-3.473 3.472A3.462 3.462 0 016.527 10 3.462 3.462 0 0110 6.528zM1.665 9.305v1.39h2.083v-1.39H1.666zm14.583 0v1.39h2.084v-1.39h-2.084zM5.09 13.928L3.616 15.4l.982.982 1.473-1.473-.982-.982zm9.82 0l-.982.982 1.473 1.473.982-.982-1.473-1.473zM9.305 16.25v2.083h1.389V16.25h-1.39z\"/></svg>')`,\n            },\n        },\n        '& .MuiSwitch-track': {\n            opacity: 1,\n            backgroundColor: theme.palette.mode === 'dark' ? '#8796A5' : '#aab4be',\n            borderRadius: 20 / 2,\n        },\n    }));\n\n    return (\n        <div style={{marginLeft: \"auto\"}}>\n            <FormControlLabel\n                checked={theme}\n                onChange={()=>dispatch(themeApp(!theme))}\n                control={<MaterialUISwitch/>}\n                label=\"\"\n            />\n        </div>\n    );\n});","import {memo, ReactNode} from 'react';\nimport {useAppSelector} from \"../../hooks/Redux/redux\";\n\ninterface MainIconProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nexport const MainIcon = memo((props: MainIconProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n        const {theme} = useAppSelector(state => state.themeAppSlice)\n\n\n\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Outline\" viewBox=\"0 0 24 24\"\n             width=\"35\"\n             height=\"35\"\n             fill={theme ? \"rgb(42, 127, 189)\" : \"rgb(42,71,189)\"}\n        >\n            <path\n                d=\"M7,0H4A4,4,0,0,0,0,4V7a4,4,0,0,0,4,4H7a4,4,0,0,0,4-4V4A4,4,0,0,0,7,0ZM9,7A2,2,0,0,1,7,9H4A2,2,0,0,1,2,7V4A2,2,0,0,1,4,2H7A2,2,0,0,1,9,4Z\"/>\n            <path\n                d=\"M20,0H17a4,4,0,0,0-4,4V7a4,4,0,0,0,4,4h3a4,4,0,0,0,4-4V4A4,4,0,0,0,20,0Zm2,7a2,2,0,0,1-2,2H17a2,2,0,0,1-2-2V4a2,2,0,0,1,2-2h3a2,2,0,0,1,2,2Z\"/>\n            <path\n                d=\"M7,13H4a4,4,0,0,0-4,4v3a4,4,0,0,0,4,4H7a4,4,0,0,0,4-4V17A4,4,0,0,0,7,13Zm2,7a2,2,0,0,1-2,2H4a2,2,0,0,1-2-2V17a2,2,0,0,1,2-2H7a2,2,0,0,1,2,2Z\"/>\n            <path\n                d=\"M20,13H17a4,4,0,0,0-4,4v3a4,4,0,0,0,4,4h3a4,4,0,0,0,4-4V17A4,4,0,0,0,20,13Zm2,7a2,2,0,0,1-2,2H17a2,2,0,0,1-2-2V17a2,2,0,0,1,2-2h3a2,2,0,0,1,2,2Z\"/>\n        </svg>\n\n    );\n});","// extracted by mini-css-extract-plugin\nexport default {\"toolbar\":\"MiniDrawer_toolbar__te4HI\",\"headerDrawer\":\"MiniDrawer_headerDrawer__rg1kL\",\"buttonText\":\"MiniDrawer_buttonText__N9MM8\"};","import * as React from 'react';\nimport {ReactNode} from 'react';\nimport {CSSObject, styled, Theme, useTheme} from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport MuiDrawer from '@mui/material/Drawer';\nimport MuiAppBar, {AppBarProps as MuiAppBarProps} from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport IconButton from '@mui/material/IconButton';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport {RecordReceptionIcon} from \"../../icons/RecordReceptionIcon/RecordReceptionIcon\";\nimport {MenuIcon} from \"../../icons/MenuIcon/MenuIcon\";\nimport {SettingsIcon} from \"../../icons/SettingsIcon/SettingsIcon\";\nimport {ThemeSwitch} from \"../ThemeSwitch/ThemeSwitch\";\nimport {Link} from \"react-router-dom\";\nimport {MainIcon} from \"../../icons/MainIcon/MainIcon\";\nimport {useAppSelector} from \"../../hooks/Redux/redux\";\nimport cls from \"./MiniDrawer.module.scss\"\n\n\nconst drawerWidth = 240;\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n    }),\n    overflowX: 'hidden',\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n    transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: `calc(${theme.spacing(7)} + 1px)`,\n    [theme.breakpoints.up('sm')]: {\n        width: `calc(${theme.spacing(8)} + 1px)`,\n    },\n});\n\nconst DrawerHeader = styled('div')(({theme}) => ({\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n}));\n\ninterface AppBarProps extends MuiAppBarProps {\n    open?: boolean;\n\n}\n\nconst AppBar = styled(MuiAppBar, {\n    shouldForwardProp: (prop) => prop !== 'open',\n})<AppBarProps>(({theme, open}) => ({\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n    }),\n    ...(open && {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    }),\n}));\n\nconst Drawer = styled(MuiDrawer, {shouldForwardProp: (prop) => prop !== 'open'})(\n    ({theme, open}) => ({\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n        boxSizing: 'border-box',\n        ...(open && {\n            ...openedMixin(theme),\n            '& .MuiDrawer-paper': openedMixin(theme),\n        }),\n        ...(!open && {\n            ...closedMixin(theme),\n            '& .MuiDrawer-paper': closedMixin(theme),\n        }),\n    }),\n);\n\ninterface MiniDrawerProps {\n    children?: ReactNode\n}\n\nexport function MiniDrawer(props: MiniDrawerProps) {\n    const {\n        children,\n    } = props\n    const {theme: customTheme} = useAppSelector(state => state.themeAppSlice)\n    const {isAuth} = useAppSelector(state => state.authAppSlice)\n\n\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    const itemMenu = {\n        \"Записи\": [<MainIcon/>, \"/\"],\n        \"Добавить запись\": [<RecordReceptionIcon/>, \"/record\"],\n        \"Настройки\": [<SettingsIcon/>, \"/setting\"],\n        // \"Оплата\": [<PayIcon/>, \"/\"],\n    }\n\n    return (\n        <Box sx={{display: 'flex'}}>\n            <CssBaseline/>\n            <AppBar position=\"fixed\" open={open}>\n                <Toolbar\n                    className={cls.toolbar}\n                >\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        sx={{\n                            marginRight: 5,\n                            ...(open && {display: 'none'}),\n                        }}\n                    >\n                        <MenuIcon theme={true}/>\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap component=\"div\">\n                        {isAuth.user.toUpperCase()}\n                    </Typography>\n                    <ThemeSwitch/>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n\n                variant=\"permanent\"\n                open={open}\n                // sx={{backgroundColor: \"rgb(43,43,43)\"}}\n\n            >\n                <DrawerHeader className={cls.headerDrawer}>\n                    <IconButton onClick={handleDrawerClose}>\n                        {/*<MenuIcon theme={customTheme? !(theme.direction === 'rtl'):(theme.direction === 'rtl')}/>*/}\n                        <MenuIcon theme={true}/>\n                    </IconButton>\n                </DrawerHeader>\n                <Divider/>\n                <List className={cls.drawer}>\n                    {Object.entries(itemMenu).map(([key, value]) => (\n                        <Link key={key} style={{textDecoration: 'none', color: 'inherit'}} to={`${value[1]}`}>\n                            <ListItem disablePadding sx={{display: 'block', marginTop: \"20px\"}}>\n                                <ListItemButton\n                                    sx={{\n                                        minHeight: 48,\n                                        justifyContent: open ? 'initial' : 'center',\n                                        px: 2.5,\n                                    }}\n                                >\n                                    <ListItemIcon\n                                        sx={{\n                                            minWidth: 0,\n                                            mr: open ? 3 : 'auto',\n                                            justifyContent: 'center',\n                                        }}\n                                    >\n                                        {value[0]}\n                                    </ListItemIcon>\n                                    <ListItemText primary={key}\n                                                  sx={{fontSize: \"18px\", fontWeight: \"bold\", opacity: open ? 1 : 0}}/>\n                                </ListItemButton>\n                            </ListItem>\n                        </Link>\n                    ))}\n                </List>\n            </Drawer>\n            <Box component=\"main\" sx={{\n                height: \"100vh\",\n                backgroundColor: customTheme ? \"rgb(43,43,43)\" : \"rgba(233, 237, 243, 1)\",\n                flexGrow: 1, p: 3\n            }}>\n                <DrawerHeader/>\n                {children}\n            </Box>\n        </Box>\n    );\n}","import {memo, ReactNode} from 'react';\nimport CustomTable from \"../CustomTable/CustomTable\";\nimport * as React from \"react\";\nimport {styled} from \"@mui/material/styles\";\nimport {MiniDrawer} from \"../MiniDrawer/MiniDrawer\";\n\ninterface WrapperPageProps {\n    className?: string\n    children?: ReactNode\n}\n\n\nexport const WrapperPage = memo((props: WrapperPageProps) => {\n    const {\n        className,\n        children,\n        ...otherProps\n    } = props\n\n\n    return (\n            <MiniDrawer>\n                {children}\n            </MiniDrawer>\n    );\n});"],"names":["CreateTypeWork","memo","props","className","children","open","handleClose","otherProps","isChange","setIsChange","useState","executeRequest","req","useAxios","data","error","loading","typeWorkApp","typeWorkSlice","actions","typeWorkReset","typeWorkName","typeWork","useAppSelector","state","listTypeWorkApp","listTypeWorksSlice","listTypeWork","useEffect","dispatch","useAppdispatch","_jsx","Modal","onClose","_jsxs","Box","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","Typography","id","variant","component","Button","onClick","handleCreate","handleChange","async","console","fetcData","Slide","direction","in","mountOnEnter","unmountOnExit","FormControl","m","marginBottom","fullWidth","size","InputLabel","Select","labelId","value","name_type","label","map","item","index","MenuItem","TextField","helperText","onChange","e","target","disabled","changeData","CreateVarietyWork","typeDate","reqType","varietyWorkApp","varietyWorkSlice","varietyWorkName","varietyWorkCost","varietyWorkMinutes","varietyWorkType","varietyWorkReset","varietyWork","varietyWorksSlice","listVarietyWorkApp","listVarietyWorksSlice","listVarietyWork","getType","log","name_variety","type","cost","length","slice","Number","duration_in_minutes","type_work","ListSettings","openTypeWorkModal","setOpenTypeWorkModal","openVarietyWorkModal","setOpenVarietyWorkModal","cls","handleCloseTypeWorkModal","handleCloseVarietyWorkModal","Accordion","AccordionSummary","expandIcon","ExpandMoreIcon","AccordionDetails","AccordionActions","WrapperPage","Simulate","API_URL","$api","axios","create","baseURL","interceptors","request","use","config","headers","Authorization","concat","localStorage","getItem","response","status","_retry","body","sessionStorage","post","setItem","access","Promise","reject","setData","setError","setLoading","method","url","requestData","toUpperCase","get","put","Error","RecordReceptionIcon","theme","themeAppSlice","style","xmlns","viewBox","height","fill","d","MenuIcon","y","rx","SettingsIcon","ThemeSwitch","themeApp","MaterialUISwitch","styled","Switch","_ref","padding","margin","color","backgroundImage","encodeURIComponent","opacity","backgroundColor","palette","mode","content","backgroundRepeat","backgroundPosition","borderRadius","marginLeft","FormControlLabel","checked","control","MainIcon","drawerWidth","openedMixin","transition","transitions","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","display","alignItems","justifyContent","mixins","toolbar","AppBar","MuiAppBar","shouldForwardProp","prop","_ref2","zIndex","drawer","Drawer","MuiDrawer","_ref3","flexShrink","whiteSpace","boxSizing","MiniDrawer","customTheme","isAuth","authAppSlice","setOpen","useTheme","React","itemMenu","CssBaseline","Toolbar","IconButton","handleDrawerOpen","edge","marginRight","noWrap","user","headerDrawer","handleDrawerClose","Divider","List","Object","entries","_ref4","key","Link","textDecoration","to","ListItem","disablePadding","marginTop","ListItemButton","minHeight","px","ListItemIcon","minWidth","mr","ListItemText","primary","fontSize","fontWeight","flexGrow"],"sourceRoot":""}