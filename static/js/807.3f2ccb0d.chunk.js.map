{"version":3,"file":"static/js/807.3f2ccb0d.chunk.js","mappings":"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","sources":["pages/SignInPage/ui/SignInPage.tsx","providers/api/axios/axios.ts"],"sourcesContent":["import * as React from 'react';\nimport {useEffect, useState} from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport {createTheme, ThemeProvider} from '@mui/material/styles';\nimport {postApi} from \"../../../providers/api/RtkService\";\nimport {useCookies} from \"react-cookie\";\nimport {useAppdispatch} from \"../../../shared/hooks/Redux/redux\";\nimport {authAppSlice} from \"../../../providers/api/slice/AuthSlice\";\nimport {useNavigate} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {API_URL} from \"../../../providers/api/axios/axios\";\n\nfunction Copyright(props: any) {\n    return (\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://mui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n// TODO remove, this demo shouldn't need to reset the theme.\nconst defaultTheme = createTheme();\n\nfunction SignIn() {\n    const nav = useNavigate()\n    const dispatch = useAppdispatch()\n    const {authApp} = authAppSlice.actions\n    const [username, setUsername] = useState<string>(\"\")\n    const [password, setPassword] = useState<string>(\"\")\n\n    const [auth, {data, isLoading, error}] = postApi.useAuthMutation()\n\n\n\n    const submit = async () => {\n        try {\n\n            const body = {\n                username: username,\n                password: password\n            }\n            const response = await axios.post(`${API_URL}organization_app/api/token/`, body);\n\n            if(response.data){\n                localStorage.setItem(\"token\", response.data?.access)\n                sessionStorage.setItem(\"refresh\",response.data?.refresh)\n            }\n\n            if (response.data?.access){\n                localStorage.setItem(\"organization\", username)\n                dispatch(authApp({auth:true,user:username}))\n                nav(\"/\")\n            }\n\n            // Обработка данных от сервера\n        } catch (error) {\n            console.error('Ошибка запроса:', error);\n            // Обработка ошибки\n        }\n    };\n\n    return (\n        <ThemeProvider theme={defaultTheme}>\n            <Container component=\"main\" maxWidth=\"xs\">\n                <CssBaseline/>\n                <Box\n                    sx={{\n                        marginTop: 8,\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <Avatar sx={{m: 1, bgcolor: 'secondary.main'}}>\n                        {/*<LockOutlinedIcon />*/}\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Вход\n                    </Typography>\n                    <TextField\n                        value={username}\n                        onChange={(event) => setUsername(event.target.value)}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"username\"\n                        label=\"Логин\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                    />\n                    <TextField\n                        value={password}\n                        onChange={(event) => setPassword(event.target.value)}\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Пароль\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                    />\n                    {/*<FormControlLabel*/}\n                    {/*  control={<Checkbox value=\"remember\" color=\"primary\" />}*/}\n                    {/*  label=\"Remember me\"*/}\n                    {/*/>*/}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{mt: 3, mb: 2}}\n                        onClick={submit}\n                    >\n                        Войти\n                    </Button>\n                    {/*<Grid container>*/}\n                    {/*  <Grid item xs>*/}\n                    {/*    <Link href=\"#\" variant=\"body2\">*/}\n                    {/*      Forgot password?*/}\n                    {/*    </Link>*/}\n                    {/*  </Grid>*/}\n                    {/*  <Grid item>*/}\n                    {/*    <Link href=\"#\" variant=\"body2\">*/}\n                    {/*      {\"Don't have an account? Sign Up\"}*/}\n                    {/*    </Link>*/}\n                    {/*  </Grid>*/}\n                    {/*</Grid>*/}\n                </Box>\n                <Copyright sx={{mt: 8, mb: 4}}/>\n            </Container>\n        </ThemeProvider>\n    );\n}\n\nexport default SignIn","import {Simulate} from \"react-dom/test-utils\";\nimport error = Simulate.error;\nimport {useCookies} from \"react-cookie\";\nimport {useState} from 'react';\nimport axios, {AxiosResponse} from 'axios';\n\n\ninterface Token {\n    refresh: string;\n    access: string\n\n}\n\n\n// Доступ к refreshToken из cookies\n\nexport const API_URL = \"http://127.0.0.1:8000/\"\n\nconst $api = axios.create({\n    // withCredentials: true,\n    baseURL: API_URL\n})\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config\n})\n$api.interceptors.response.use((config) => {\n    return config\n}, async (error) => {\n    if (error.response.status === 401 && error.config && !error.config._retry) {\n        error.config._retry = true; // Установка флага повторной попытки, чтобы избежать бесконечной петли повторных запросов\n        try {\n            const body = {\n                'refresh': sessionStorage.getItem(\"refresh\")\n\n            }\n\n            const response = await axios.post<Token>(`${API_URL}organization_app/api/token/refresh/`, body)\n            localStorage.setItem(\"token\", response.data.access)\n            return $api.request(error.config);\n        } catch (e) {\n            console.log(e, \"Пользователь не авторизован\")\n        }\n\n    }\n    return Promise.reject(error); // Возврат оригинальной ошибки, если обновление токена не удалось\n})\n// export default $api\n\n\ninterface AxiosHookResponse<T> {\n    data: T | null;\n    error: any;\n    loading: boolean;\n    executeRequest: (method: string, url: string, requestData?: any) => Promise<void>;\n}\n\nconst useAxios = <T>(): AxiosHookResponse<T> => {\n    const [data, setData] = useState<T | null>(null);\n    const [error, setError] = useState<any>(null);\n    const [loading, setLoading] = useState<boolean>(false);\n\n    const executeRequest = async (method: string, url: string, requestData?: any) => {\n        const headers = {\n            'Content-Type': 'application/json', // Пример стандартного заголовка\n\n        };\n\n        setLoading(true);\n        try {\n            let response: AxiosResponse<T>;\n            switch (method.toUpperCase()) {\n                case 'GET':\n                    response = await $api.get<T>(url, {headers});\n                    break;\n                case 'POST':\n                    response = await $api.post<T>(url, requestData, {headers});\n                    break;\n                case 'PUT':\n                    response = await $api.put<T>(url, requestData, {headers});\n                    break;\n                default:\n                    throw new Error('Unsupported method');\n            }\n            // console.log(response.data)\n            setData(response.data);\n            setLoading(false);\n        } catch (error) {\n            setError(error);\n            setLoading(false);\n        }\n    };\n\n    return {data, error, loading, executeRequest};\n};\n\nexport default useAxios;\n\n"],"names":["Copyright","props","_jsxs","Typography","variant","color","align","children","_jsx","Link","href","Date","getFullYear","defaultTheme","createTheme","nav","useNavigate","dispatch","useAppdispatch","authApp","authAppSlice","actions","username","setUsername","useState","password","setPassword","auth","data","isLoading","error","postApi","useAuthMutation","ThemeProvider","theme","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","TextField","value","onChange","event","target","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","Button","mt","mb","onClick","async","_response$data3","body","response","axios","post","concat","API_URL","_response$data","_response$data2","localStorage","setItem","access","sessionStorage","refresh","user","console","Simulate","$api","create","baseURL","interceptors","request","use","config","headers","Authorization","getItem","status","_retry","e","log","Promise","reject","useAxios","setData","setError","loading","setLoading","executeRequest","method","url","requestData","toUpperCase","get","put","Error"],"sourceRoot":""}